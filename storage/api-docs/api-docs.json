{
    "openapi": "3.0.0",
    "info": {
        "title": "Dokumentasi API",
        "description": "Whatsapp Clone API Documentation, more details at https://github.com/satrijo/whatsapp-clone/blob/main/README.md",
        "contact": {
            "email": "mail@satrio.dev"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/api/chatrooms": {
            "get": {
                "tags": [
                    "Chatrooms"
                ],
                "summary": "Get all chatrooms",
                "description": "Retrieves a list of all chatrooms.",
                "operationId": "ce7fe6f309c557b6e5c5b4fa2acbed05",
                "responses": {
                    "200": {
                        "description": "A list of all chatrooms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "General Chat"
                                            },
                                            "max_members": {
                                                "type": "integer",
                                                "example": 100
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-06T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-06T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Chatrooms"
                ],
                "summary": "Create a new chatroom",
                "description": "Creates a new chatroom with a specified name and maximum number of members.",
                "operationId": "e4ba0c519a31cb0a4bfcf0031f3e7193",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "max_members"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "General Chat"
                                    },
                                    "max_members": {
                                        "type": "integer",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Chatroom created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "General Chat"
                                        },
                                        "max_members": {
                                            "type": "integer",
                                            "example": 50
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-06T12:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2024-11-06T12:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The 'name' field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/chatrooms/my": {
            "get": {
                "tags": [
                    "Chatrooms"
                ],
                "summary": "Get all chatrooms the user belongs to",
                "description": "Fetches a list of chatrooms that the authenticated user is a member of.",
                "operationId": "29fb2dd715594fb730ceb9429cb1dc61",
                "responses": {
                    "200": {
                        "description": "List of chatrooms the user belongs to",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "General Chatroom"
                                            },
                                            "max_members": {
                                                "type": "integer",
                                                "example": 50
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-01T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-01T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, the user must be logged in to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/chatrooms/{chatroom}/enter": {
            "post": {
                "tags": [
                    "Chatrooms"
                ],
                "summary": "Join a chatroom",
                "description": "Allows an authenticated user to join a chatroom if there is space and they are not already a member. Once the user joins, a WebSocket event 'UserEnteredChatroom' will be broadcasted on the 'chatroom.{chatroom_id}' channel.",
                "operationId": "990649538e8db7d02764f28786a61ef5",
                "parameters": [
                    {
                        "name": "chatroom",
                        "in": "path",
                        "description": "ID of the chatroom to join",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13662cf0-ead2-48b7-a056-ded77823fe9c"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully joined the chatroom",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Joined chatroom"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "The chatroom is full",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Chatroom is full"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User is already a member of the chatroom",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User already in chatroom"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, the user must be logged in to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/chatrooms/{chatroom}/leave": {
            "post": {
                "tags": [
                    "Chatrooms"
                ],
                "summary": "Leave a chatroom",
                "description": "Allows an authenticated user to leave a chatroom.",
                "operationId": "0fca3374da5da9644eeb25e71f7273df",
                "parameters": [
                    {
                        "name": "chatroom",
                        "in": "path",
                        "description": "ID of the chatroom to leave",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13662cf0-ead2-48b7-a056-ded77823fe9c"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully left the chatroom",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Left chatroom"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, the user must be logged in to access this resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chatroom not found or user is not a member of the chatroom",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Chatroom not found or user is not a member"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/chatrooms/{chatroom}/messages": {
            "get": {
                "tags": [
                    "Messages"
                ],
                "summary": "Get messages in a chatroom",
                "description": "Fetches all messages in a specific chatroom with user information.",
                "operationId": "1f4fffcf2edc151fba95b4864a2a7bf5",
                "parameters": [
                    {
                        "name": "chatroom",
                        "in": "path",
                        "description": "The ID of the chatroom",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13662cf0-ead2-48b7-a056-ded77823fe9c"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of messages in the chatroom",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "text": {
                                                "type": "string",
                                                "example": "Hello!"
                                            },
                                            "attachment_path": {
                                                "type": "string",
                                                "example": "storage/attachment.png"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-11-06T12:34:56"
                                            },
                                            "user": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Chatroom not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chatroom not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/chatrooms/{chatroomId}/messages": {
            "post": {
                "tags": [
                    "Messages"
                ],
                "summary": "Send a message to a chatroom",
                "description": "This endpoint retrieves messages for the specified chatroom. To receive real-time updates, use WebSocket to subscribe to the 'chat.{chatroom_id}' channel.",
                "operationId": "d06cf596d94c72de0aa5f15bec7f3914",
                "parameters": [
                    {
                        "name": "chatroomId",
                        "in": "path",
                        "description": "The ID of the chatroom",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "13662cf0-ead2-48b7-a056-ded77823fe9c"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Hello everyone!"
                                    },
                                    "attachment": {
                                        "description": "Optional file attachment (image/video)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Message queued for processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message queued for processing"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "pending"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (either message or attachment is required, or invalid file type)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Message or attachment is required"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register a new user",
                "operationId": "2f25885f3b6f61ca11724ec302d2e439",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "User's name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "User's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "User's password",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User registered successfully"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "Login a user",
                "description": "Authenticates a user by email and password and returns a Bearer token if successful.",
                "operationId": "0fc9610184083ac6dddab2c63139225a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_token_here"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid login details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid login details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Input your Bearer token in the format 'Bearer {token}' to access authenticated endpoints",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Chatrooms",
            "description": "Chatrooms"
        },
        {
            "name": "Messages",
            "description": "Messages"
        },
        {
            "name": "Register",
            "description": "Register"
        },
        {
            "name": "Login",
            "description": "Login"
        }
    ]
}